{"version":3,"sources":["components/DropZone/DropZone.module.css","components/MetadataDisplay/MetadataDisplay.module.css","components/DropZone/DropZone.js","components/MetadataDisplay/MetadataDisplay.js","components/UI/Alert.js","App.js","reportWebVitals.js","index.js","components/UI/Alert.module.css","App.module.css"],"names":["module","exports","DropZone","props","onSetMetadata","useDropzone","onDrop","acceptedFiles","data","modifiedData","name","size","lastModifiedDate","toString","type","maxFiles","getRootProps","getInputProps","className","styles","MetadataDisplay","displayContainer","AlertOverlay","alertStyles","alert","success","isError","error","join","children","dismissButton","onClick","onDismiss","icon","faTimes","Alert","ReactDOM","createPortal","document","getElementById","initialState","isAdded","isRemoved","alertReducer","action","App","useState","metadata","setMetadata","isMetaVisible","setIsMetaVisible","useReducer","dispatchAlert","isDisabled","Object","keys","length","alertText","alertDisplay","disabled","showButton","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.850c298b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropZone\":\"DropZone_DropZone__18m6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayContainer\":\"MetadataDisplay_displayContainer__1I7YM\"};","import React from 'react';\n\nimport styles from './DropZone.module.css';\nimport {useDropzone} from 'react-dropzone';\n\n\nconst DropZone = (props) => {\n\n    const {onSetMetadata} = props;\n    \n    const onDrop = (acceptedFiles) => {\n        const data = acceptedFiles[0];\n        let modifiedData = null;\n\n        if (data) {\n            modifiedData =  {\n                name : data.name,\n                size : data.size,\n                lastModifiedDate : data.lastModifiedDate.toString(),\n                type : data.type\n            }            \n        }\n\n        onSetMetadata(modifiedData);\n\n    };\n\n    const {getRootProps, getInputProps} = useDropzone({onDrop, maxFiles : 1});\n\n    return (\n        <div {...getRootProps()} className = {styles.DropZone}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' Drop or select your file to enable the buttons</p>\n        </div>\n    );\n\n}\n\nexport default DropZone;","import styles from './MetadataDisplay.module.css';\n\nconst MetadataDisplay = (props) => {\n    return (\n    <ul className = {styles.displayContainer}>\n        <li> <span>Name :</span> {props.name}</li>\n        <li> <span>Type :</span> {props.type}</li>\n        <li> <span>Size : </span>{props.size}</li>\n        <li> <span>Last modified date :</span> {props.lastModifiedDate}</li>\n    </ul>\n    );\n};\n\n\nexport default MetadataDisplay;","import ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport styles from './Alert.module.css';\n\nconst AlertOverlay = (props) => {\n\n    const alertStyles = [styles.alert, styles.success];\n\n    if (props.isError) {\n        alertStyles[1] = styles.error;\n    }\n\n    return (\n    <div className = {alertStyles.join(' ')}>\n        {props.children}\n        <button className = {styles.dismissButton} onClick = {props.onDismiss}>\n            <FontAwesomeIcon icon = { faTimes }/>\n        </button>\n    </div>);\n}\n\nconst Alert = (props) => {\n    return ReactDOM.createPortal(<AlertOverlay {...props} />, document.getElementById('alert-root'));\n}\n\nexport default Alert;\n","import { useState, useReducer } from 'react';\n\nimport styles from './App.module.css';\nimport DropZone from './components/DropZone/DropZone';\nimport MetadataDisplay from './components/MetadataDisplay/MetadataDisplay';\nimport Alert from './components/UI/Alert';\n\nconst initialState = { isAdded : false, isRemoved : false, error : false };\n\nconst alertReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case ('ADDED') : return { isAdded : true, isRemoved : false, error : false };\n    case ('REMOVED') : return { isAdded : false, isRemoved : true, error : false };\n    case ('RESET') : return { isAdded : false, isRemoved : false, error : false };\n    case ('ERROR') : return { isAdded : false, isRemoved : false, error : true };\n    default : return initialState;\n  }\n\n}\n\nfunction App() {\n\n  //manages metadata state\n  const [metadata, setMetadata] = useState({});\n\n  //manages metadata display state\n  const [isMetaVisible, setIsMetaVisible] = useState(false);\n\n  //manages alert state using a reducer\n  const [alert, dispatchAlert] = useReducer(alertReducer, initialState);\n\n  //manages disabling of the showMetadata button\n  const isDisabled = Object.keys(metadata).length === 0;\n\n  //sets metadata \n  const MetadataHandler = (data) => {\n\n    if (data) {\n      setMetadata(data);\n      dispatchAlert({ type : 'ADDED'});\n    } else {\n      setMetadata({});\n      dispatchAlert({ type : 'ERROR' });\n      setIsMetaVisible(false);\n    }\n\n\n  }\n\n  //toggles metadata display\n  const visibilityToggler = () => {\n    setIsMetaVisible((prevState) => !prevState);\n  }\n\n  //clears the metadata state\n  const clearMetadata = () => {\n    setMetadata({});\n    setIsMetaVisible(false);\n    dispatchAlert({ type : 'REMOVED'});\n  }\n\n  const dismissAlert = () => {\n    dispatchAlert({ type : 'RESET' });\n  }\n\n  let alertText = 'File has been successfully uploaded';\n\n  if (alert.isRemoved) {\n    alertText = 'File has been successfully removed';\n  }\n\n  if (alert.error) {\n    alertText = 'Upload one file at a time';\n  }\n\n  const alertDisplay = alert.isAdded || alert.isRemoved || alert.error;\n\n  return (\n    <div className = {styles.App}>\n      {\n      alertDisplay && \n      <Alert onDismiss = {dismissAlert} isError = {alert.error} >\n        {alertText}\n      </Alert>\n      }\n      <DropZone onSetMetadata = {MetadataHandler} />\n      <button \n      disabled = {isDisabled} \n      className = {styles.showButton} \n      onClick = {visibilityToggler}>\n        Show Metadata\n      </button>\n      <button \n      disabled = {isDisabled} \n      className = {styles.showButton} \n      onClick = {clearMetadata}>\n        Clear File\n      </button>\n      {isMetaVisible && <MetadataDisplay {...metadata} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__3lQrb\",\"success\":\"Alert_success__1VxNy\",\"error\":\"Alert_error__10v3C\",\"dismissButton\":\"Alert_dismissButton__3-9AH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"showButton\":\"App_showButton__1qHHK\"};"],"sourceRoot":""}